{"version":3,"sources":["leadspace-results.scss","../../../node_modules/bootstrap/scss/mixins/_breakpoints.scss"],"names":[],"mappings":"AAEA,kCAGY,iBAAa,CAoChB,yBAvCT,kCAMgB,uBAAa,CAAb,8BAAa,CAAb,oBAAa,CAAb,sBAAa,CACb,wBAAiB,CAAjB,qCAAiB,CAAjB,qBAAiB,CAAjB,6BAAiB,CAAA,CCsD7B,0BD7DJ,kCAWgB,mBAAa,CAAA,CAX7B,yCAegB,UAAS,CAET,sEAAkB,CAClB,sDAAmC,CAAnC,8CAAmC,CACnC,yBAAO,CACP,2BAAQ,CACR,iBAAU,CACV,WAAK,CACL,YAAM,CACN,SAAS,CAcZ,yBAtCb,yCA2BoB,uBAAO,CACP,yBAAQ,CACR,WAAK,CACL,MAAM,CAAA,CC+BtB,0BD7DJ,yCAkCoB,uBAAO,CACP,yBAAQ,CACR,WAAK,CAAA,CApCzB,0CA4CY,2BAAO,CAAP,eAAO,CAAP,gBAAO,CAAP,OAAO,CACP,iBAAY,CACZ,aAAW,CAqBd,yBAnET,0CAgDgB,eAAW,CACX,YAAY,CAEZ,kBAAa,CACb,oBAAe,CACf,mBAAa,CACb,2BAAO,CAAP,eAAO,CAAP,gBAAO,CAAP,OAAO,CAAA,CCmCnB,mDDzFJ,0CA0DgB,yBAAY,CAAZ,0BAAY,CAAZ,iBAAY,CAAA,CCGxB,0BD7DJ,0CA8DgB,iBAAW,CACX,kBAAa,CACb,oBAAe,CACf,mBAAa,CAAA,CAjE7B,qCAsEY,2BAAO,CAAP,eAAO,CAAP,gBAAO,CAAP,OAAO,CAmBV,4BAzFT,qCAyEgB,kBAAa,CACb,mBAAc,CAAA,CCb1B,yBD7DJ,qCA8EgB,aAAa,CACb,kBAAM,CAAN,cAAM,CAAN,UAAM,CAAN,MAAM,CACN,2BAAO,CAAP,eAAO,CAAP,gBAAO,CAAP,OAAO,CACP,kBAAa,CACb,mCAAW,CAAX,2BAAW,CAAA,CCrBvB,0BD7DJ,qCAsFgB,kBAAa,CACb,mCAAW,CAAX,2BAAW,CAAA,CCbvB,4BD1EJ,6CA+FY,gBAAW,CAAA,CClCnB,0BD7DJ,6CAmGY,kBAAe,CAAA,CAnG3B,qBAwGQ,iBAAW,CACX,iBAAY,CAUf,0BAnHL,qBA4GY,iBAAW,CACX,eAAY,CAAA,CChDpB,0BD7DJ,qBAiHY,iBAAY,CAAA","file":"../leadspace-results.min.css","sourcesContent":["@import '../common-imports';\n\n.leadspace-results {\n    .container {\n        > div {\n            padding-top: 13rem;\n\n            @include media-breakpoint-up(md) {\n                align-items: flex-start;\n                justify-content: space-between;\n            }\n\n            @include media-breakpoint-up(xl) {\n                padding-top: 16.2rem;\n            }\n\n            &::after {\n                content: '';\n                // background-color: red;\n                background-image: url('#{$theme-imgpath}light-blue-paper-texture-web@2x.jpg');\n                box-shadow: 0.2rem 0.2rem 0.4rem 0 rgba(0, 0, 0, 0.24);\n                width: calc(100% + 1.6rem);\n                height: calc(100% - 16.3rem);\n                position: absolute;\n                top: 20.3rem;\n                left: -3.8rem;\n                z-index: 1;\n\n                @include media-breakpoint-up(md) {\n                    width: calc(100% - 6rem);\n                    height: calc(100% - 16rem);\n                    top: 19.6rem;\n                    left: 0;\n                }\n\n                @include media-breakpoint-up(xl) {\n                    width: calc(100% - 8rem);\n                    height: calc(100% - 24rem);\n                    top: 26.3rem;\n                }\n            }\n        }\n    }\n\n    .leadspace {\n        &-description {\n            order: 2;\n            margin-top: 3.2rem;\n            max-width: 95%;\n            @include media-breakpoint-up(md) {\n                max-width: 28rem;\n                margin-top: 0;\n                // margin-bottom: 4.4rem;\n                margin-left: 4.4rem;\n                margin-bottom: 3.8rem;\n                padding-top: 10.6rem;\n                order: 1;\n            }\n\n            @include media-breakpoint-between(md, xl){\n                align-self: center;\n            }\n            \n            @include media-breakpoint-up(xl) {\n                max-width: 33.5rem;\n                margin-left: 5.6rem;\n                margin-bottom: 6.8rem;\n                padding-top: 21.9rem;\n            }\n        }\n\n        &-figure {\n            order: 1;\n\n            @include media-breakpoint-down(md) {\n                margin-left: -0.4rem;\n                margin-right: -0.4rem;\n            }\n\n            @include media-breakpoint-up(md) {\n                margin-left: 0;\n                flex: 1;\n                order: 2;\n                margin-left: 3.6rem;\n                transform: translateX(.4rem);\n            }\n\n            @include media-breakpoint-up(xl) {\n                margin-left: 4.2rem;\n                transform: translateX(.8rem);\n            }\n        }\n    }\n\n    h3,\n    .h3 {\n        @include media-breakpoint-down(md) {\n            font-size: 2.9rem;\n        }\n\n        @include media-breakpoint-up(xl) {\n            padding-right: 4rem;\n        }\n    }\n\n    p {\n        max-width: 26.4rem;\n        margin-top: 1.2rem;\n\n        @include media-breakpoint-up(xl) {\n            max-width: 37.6rem;\n            margin-top: 2rem;\n        }\n\n        @include media-breakpoint-up(xl) {\n            margin-top: 3.2rem;\n        }\n    }\n}\n","// Breakpoint viewport sizes and media queries.\n//\n// Breakpoints are defined as a map of (name: minimum width), order from small to large:\n//\n//    (xs: 0, sm: 576px, md: 768px, lg: 992px, xl: 1200px)\n//\n// The map defined in the `$grid-breakpoints` global variable is used as the `$breakpoints` argument by default.\n\n// Name of the next breakpoint, or null for the last breakpoint.\n//\n//    >> breakpoint-next(sm)\n//    md\n//    >> breakpoint-next(sm, (xs: 0, sm: 576px, md: 768px, lg: 992px, xl: 1200px))\n//    md\n//    >> breakpoint-next(sm, $breakpoint-names: (xs sm md lg xl))\n//    md\n@function breakpoint-next($name, $breakpoints: $grid-breakpoints, $breakpoint-names: map-keys($breakpoints)) {\n  $n: index($breakpoint-names, $name);\n  @if not $n {\n    @error \"breakpoint `#{$name}` not found in `#{$breakpoints}`\";\n  }\n  @return if($n < length($breakpoint-names), nth($breakpoint-names, $n + 1), null);\n}\n\n// Minimum breakpoint width. Null for the smallest (first) breakpoint.\n//\n//    >> breakpoint-min(sm, (xs: 0, sm: 576px, md: 768px, lg: 992px, xl: 1200px))\n//    576px\n@function breakpoint-min($name, $breakpoints: $grid-breakpoints) {\n  $min: map-get($breakpoints, $name);\n  @return if($min != 0, $min, null);\n}\n\n// Maximum breakpoint width.\n// The maximum value is reduced by 0.02px to work around the limitations of\n// `min-` and `max-` prefixes and viewports with fractional widths.\n// See https://www.w3.org/TR/mediaqueries-4/#mq-min-max\n// Uses 0.02px rather than 0.01px to work around a current rounding bug in Safari.\n// See https://bugs.webkit.org/show_bug.cgi?id=178261\n//\n//    >> breakpoint-max(md, (xs: 0, sm: 576px, md: 768px, lg: 992px, xl: 1200px))\n//    767.98px\n@function breakpoint-max($name, $breakpoints: $grid-breakpoints) {\n  $max: map-get($breakpoints, $name);\n  @return if($max and $max > 0, $max - .02, null);\n}\n\n// Returns a blank string if smallest breakpoint, otherwise returns the name with a dash in front.\n// Useful for making responsive utilities.\n//\n//    >> breakpoint-infix(xs, (xs: 0, sm: 576px, md: 768px, lg: 992px, xl: 1200px))\n//    \"\"  (Returns a blank string)\n//    >> breakpoint-infix(sm, (xs: 0, sm: 576px, md: 768px, lg: 992px, xl: 1200px))\n//    \"-sm\"\n@function breakpoint-infix($name, $breakpoints: $grid-breakpoints) {\n  @return if(breakpoint-min($name, $breakpoints) == null, \"\", \"-#{$name}\");\n}\n\n// Media of at least the minimum breakpoint width. No query for the smallest breakpoint.\n// Makes the @content apply to the given breakpoint and wider.\n@mixin media-breakpoint-up($name, $breakpoints: $grid-breakpoints) {\n  $min: breakpoint-min($name, $breakpoints);\n  @if $min {\n    @media (min-width: $min) {\n      @content;\n    }\n  } @else {\n    @content;\n  }\n}\n\n// Media of at most the maximum breakpoint width. No query for the largest breakpoint.\n// Makes the @content apply to the given breakpoint and narrower.\n@mixin media-breakpoint-down($name, $breakpoints: $grid-breakpoints) {\n  $max: breakpoint-max($name, $breakpoints);\n  @if $max {\n    @media (max-width: $max) {\n      @content;\n    }\n  } @else {\n    @content;\n  }\n}\n\n// Media that spans multiple breakpoint widths.\n// Makes the @content apply between the min and max breakpoints\n@mixin media-breakpoint-between($lower, $upper, $breakpoints: $grid-breakpoints) {\n  $min: breakpoint-min($lower, $breakpoints);\n  $max: breakpoint-max($upper, $breakpoints);\n\n  @if $min != null and $max != null {\n    @media (min-width: $min) and (max-width: $max) {\n      @content;\n    }\n  } @else if $max == null {\n    @include media-breakpoint-up($lower, $breakpoints) {\n      @content;\n    }\n  } @else if $min == null {\n    @include media-breakpoint-down($upper, $breakpoints) {\n      @content;\n    }\n  }\n}\n\n// Media between the breakpoint's minimum and maximum widths.\n// No minimum for the smallest breakpoint, and no maximum for the largest one.\n// Makes the @content apply only to the given breakpoint, not viewports any wider or narrower.\n@mixin media-breakpoint-only($name, $breakpoints: $grid-breakpoints) {\n  $min:  breakpoint-min($name, $breakpoints);\n  $next: breakpoint-next($name, $breakpoints);\n  $max:  breakpoint-max($next);\n\n  @if $min != null and $max != null {\n    @media (min-width: $min) and (max-width: $max) {\n      @content;\n    }\n  } @else if $max == null {\n    @include media-breakpoint-up($name, $breakpoints) {\n      @content;\n    }\n  } @else if $min == null {\n    @include media-breakpoint-down($next, $breakpoints) {\n      @content;\n    }\n  }\n}\n"]}