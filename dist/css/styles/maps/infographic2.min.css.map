{"version":3,"sources":["infographic2.scss","../base/_global-vars.scss","../../../node_modules/bootstrap/scss/mixins/_breakpoints.scss"],"names":[],"mappings":"AAGI,uBACI,WAAQ,CACR,UAAM,CACN,aAAO,CACP,oBAAe,CAJlB,8BAMO,UAAS,CACT,iBAAU,CACV,UAAO,CACP,WAAQ,CACR,MAAM,CACN,KAAK,CACL,oBAAe,CACf,+DCb8B,CDa9B,uDCb8B,CDcjC,2BAKG,aAAQ,CAaX,yBAhBJ,2BAKW,SAAO,CACP,aAAQ,CAAA,CEsCpB,yBF5CC,2BASW,aAAO,CACP,cAAQ,CAAA,CAVnB,+BAcW,WAAQ,CACX,6BAGD,sEAAkB,CAClB,wBAAmB,CAFtB,+BAKO,aAAO","file":"../infographic2.min.css","sourcesContent":["@import '../common-imports';\n\n.infographic2{\n    &__wrapper{\n        height: 100%;\n        width:100%;\n        margin:0 auto;\n        border-radius: 1.5rem;\n        &::after{\n            content: '';\n            position: absolute;\n            width: 100%;\n            height: 100%;\n            left: 0;\n            top: 0;\n            border-radius: 1.5rem;\n            box-shadow: $shadow2;\n        }\n    }\n    &__lotties{\n        > div{\n           // width: 23.9rem;\n            height: 9.6rem;\n            @include media-breakpoint-up(md){\n                width: 33%;\n                height: 9.6rem;\n            }\n            @include media-breakpoint-up(lg){\n                width: 23.9rem;\n                height: 13.6rem;\n            }   \n\n            svg{\n                height: 100%;\n            }\n        }\n        &-title{\n            background-image: url('#{$theme-imgpath}light-blue-paper-texture-web@2x.jpg');\n            background-repeat: repeat;\n\n            > *{\n                width: 23.9rem;\n            }\n        }\n    }\n}\n","$global: 'theme';\n$shadow: rgba(0, 0, 0, 0.161);\n$card-shadow:0.2rem 0.2rem 2.4rem 0 rgba(0, 0, 0, 0.24);\n$shadow2: inset 0.3rem 0.3rem 3rem 0.4rem rgba(0,0,0,0.24);\n$shadow3: inset 0.2rem 0.2rem 0.6rem 0 rgba(0, 0, 0, 0.5);\n$shadow4: inset 0.2rem 0.2rem 0.6rem 0 rgba(0, 0, 0, 0.24);\n$shadow5: 0 0.2rem 0.4rem  0 rgba(0, 0, 0, 0.5);\n$shadow6: 0.2rem 0.2rem 0.8rem 0 rgba(0, 0, 0, 0.5);\n$shadow7: inset 0.3rem 0.3rem 1.5rem 0 rgba(0, 0, 0, 0.25);\n$work-border: #161b5a;\n$placeholder-input: #878787;\n","// Breakpoint viewport sizes and media queries.\n//\n// Breakpoints are defined as a map of (name: minimum width), order from small to large:\n//\n//    (xs: 0, sm: 576px, md: 768px, lg: 992px, xl: 1200px)\n//\n// The map defined in the `$grid-breakpoints` global variable is used as the `$breakpoints` argument by default.\n\n// Name of the next breakpoint, or null for the last breakpoint.\n//\n//    >> breakpoint-next(sm)\n//    md\n//    >> breakpoint-next(sm, (xs: 0, sm: 576px, md: 768px, lg: 992px, xl: 1200px))\n//    md\n//    >> breakpoint-next(sm, $breakpoint-names: (xs sm md lg xl))\n//    md\n@function breakpoint-next($name, $breakpoints: $grid-breakpoints, $breakpoint-names: map-keys($breakpoints)) {\n  $n: index($breakpoint-names, $name);\n  @if not $n {\n    @error \"breakpoint `#{$name}` not found in `#{$breakpoints}`\";\n  }\n  @return if($n < length($breakpoint-names), nth($breakpoint-names, $n + 1), null);\n}\n\n// Minimum breakpoint width. Null for the smallest (first) breakpoint.\n//\n//    >> breakpoint-min(sm, (xs: 0, sm: 576px, md: 768px, lg: 992px, xl: 1200px))\n//    576px\n@function breakpoint-min($name, $breakpoints: $grid-breakpoints) {\n  $min: map-get($breakpoints, $name);\n  @return if($min != 0, $min, null);\n}\n\n// Maximum breakpoint width.\n// The maximum value is reduced by 0.02px to work around the limitations of\n// `min-` and `max-` prefixes and viewports with fractional widths.\n// See https://www.w3.org/TR/mediaqueries-4/#mq-min-max\n// Uses 0.02px rather than 0.01px to work around a current rounding bug in Safari.\n// See https://bugs.webkit.org/show_bug.cgi?id=178261\n//\n//    >> breakpoint-max(md, (xs: 0, sm: 576px, md: 768px, lg: 992px, xl: 1200px))\n//    767.98px\n@function breakpoint-max($name, $breakpoints: $grid-breakpoints) {\n  $max: map-get($breakpoints, $name);\n  @return if($max and $max > 0, $max - .02, null);\n}\n\n// Returns a blank string if smallest breakpoint, otherwise returns the name with a dash in front.\n// Useful for making responsive utilities.\n//\n//    >> breakpoint-infix(xs, (xs: 0, sm: 576px, md: 768px, lg: 992px, xl: 1200px))\n//    \"\"  (Returns a blank string)\n//    >> breakpoint-infix(sm, (xs: 0, sm: 576px, md: 768px, lg: 992px, xl: 1200px))\n//    \"-sm\"\n@function breakpoint-infix($name, $breakpoints: $grid-breakpoints) {\n  @return if(breakpoint-min($name, $breakpoints) == null, \"\", \"-#{$name}\");\n}\n\n// Media of at least the minimum breakpoint width. No query for the smallest breakpoint.\n// Makes the @content apply to the given breakpoint and wider.\n@mixin media-breakpoint-up($name, $breakpoints: $grid-breakpoints) {\n  $min: breakpoint-min($name, $breakpoints);\n  @if $min {\n    @media (min-width: $min) {\n      @content;\n    }\n  } @else {\n    @content;\n  }\n}\n\n// Media of at most the maximum breakpoint width. No query for the largest breakpoint.\n// Makes the @content apply to the given breakpoint and narrower.\n@mixin media-breakpoint-down($name, $breakpoints: $grid-breakpoints) {\n  $max: breakpoint-max($name, $breakpoints);\n  @if $max {\n    @media (max-width: $max) {\n      @content;\n    }\n  } @else {\n    @content;\n  }\n}\n\n// Media that spans multiple breakpoint widths.\n// Makes the @content apply between the min and max breakpoints\n@mixin media-breakpoint-between($lower, $upper, $breakpoints: $grid-breakpoints) {\n  $min: breakpoint-min($lower, $breakpoints);\n  $max: breakpoint-max($upper, $breakpoints);\n\n  @if $min != null and $max != null {\n    @media (min-width: $min) and (max-width: $max) {\n      @content;\n    }\n  } @else if $max == null {\n    @include media-breakpoint-up($lower, $breakpoints) {\n      @content;\n    }\n  } @else if $min == null {\n    @include media-breakpoint-down($upper, $breakpoints) {\n      @content;\n    }\n  }\n}\n\n// Media between the breakpoint's minimum and maximum widths.\n// No minimum for the smallest breakpoint, and no maximum for the largest one.\n// Makes the @content apply only to the given breakpoint, not viewports any wider or narrower.\n@mixin media-breakpoint-only($name, $breakpoints: $grid-breakpoints) {\n  $min:  breakpoint-min($name, $breakpoints);\n  $next: breakpoint-next($name, $breakpoints);\n  $max:  breakpoint-max($next);\n\n  @if $min != null and $max != null {\n    @media (min-width: $min) and (max-width: $max) {\n      @content;\n    }\n  } @else if $max == null {\n    @include media-breakpoint-up($name, $breakpoints) {\n      @content;\n    }\n  } @else if $min == null {\n    @include media-breakpoint-down($next, $breakpoints) {\n      @content;\n    }\n  }\n}\n"]}